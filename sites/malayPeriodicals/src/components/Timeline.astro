---
import { csvParse } from "d3-dsv";
import { scaleLinear } from "d3-scale";
import {interpolateRgb} from "d3-interpolate";

import { Debug } from 'astro/components';

import csvFile from "../data/malayPeriodicals.csv?raw";

const csvData = csvParse(csvFile);

const rectHeight = 11;
const rectGap = 10;

const minYear = csvData.reduce((prev, curr) => prev.start < curr.start ? prev : curr).start;
const maxYear = csvData.reduce((prev, curr) => prev.end > curr.end ? prev : curr).end;

const x = scaleLinear()
    .domain([minYear, maxYear])
    .range([0, 80]);

const interpolateRgbPublications = interpolateRgb("#fac51c", "#da4c41")
const interpolateRgbPeople = interpolateRgb("#37b4b7", "#61bd6d")

const peopleLength = csvData.filter((data) => {return data.type == "individual"}).length
const publicationsLength = csvData.filter((data) => {return data.type == "newspaper"}).length
let peopleCounter = 0;
let publicationsCounter = 0;

---
<figure class="md:-mx-64">
  <svg xmlns="http://www.w3.org/2000/svg" style=`width: 100%; height:${csvData.length * (rectGap + rectHeight)}px;`>
    <defs>
      <clipPath id="clipForLegend">
        <rect x="0%" y="0%" width="80%" height={csvData.length * (rectGap + rectHeight)}/>
      </clipPath>
    </defs>
    {csvData.map((data, index) => {
      const rectX = x(data.start);
      const rectY = index * (rectGap + rectHeight);
      const rectWidth = x(data.end) - x(data.start); 
      let currentColor = "black";
      if (data.type == "newspaper"){
        currentColor = interpolateRgbPublications(publicationsCounter / publicationsLength);
        publicationsCounter++;
      } else {
        currentColor = interpolateRgbPeople(peopleCounter / peopleLength);
        peopleCounter++;
      }
      return (
          <rect x=`${rectX}%` y={rectY} width=`${rectWidth}%` height={rectHeight} rx="3" style=`fill:${currentColor}`/>
          <line clip-path="url(#clipForLegend)" x1=`${rectX + rectWidth + 1}%` y1={rectY + rectHeight / 2} x2="100%" y2={rectY + rectHeight / 2} stroke-width="1" stroke={currentColor}/>
          <text x="81%" y={rectY + rectHeight} style=`font-size: ${rectHeight * 1.3}px` fill={currentColor}>{data.caption + " (" + data.start + " - " + data.end + ")"}</text>
        )
      }
    )}
  </svg>
</figure>
